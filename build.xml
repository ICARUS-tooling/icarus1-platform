<?xml version="1.0" encoding="UTF-8"?>
<project name="ICARUS main build file" default="help" basedir=".">
	<property name="app.name" value="ICARUS" />
	
	<property name="implementation.version" value="1.0.0" />
	<property name="implementation.vendor" value="Markus Gaertner, Gregor Thiele" />

	<property name="home" value="${basedir}" />

	<property name="build.home" value="${basedir}/build" />

	<property name="dist.home" value="${basedir}/dist" />
	
	<property name="lib.home" value="${basedir}/lib" />
		
	<property name="plugins.home" value="${basedir}/plugins" />
	<property name="plugins.build" value="${build.home}/plugins" />

	<property name="compile.debug"       value="true"/>
	<property name="compile.deprecation" value="false"/>
	<property name="compile.optimize"    value="true"/>
	
	<property name="temp.dir" value="${basedir}/temp" />
	
	<path id="classpath">
		<fileset dir="lib" includes="*.jar" excludes="**/.*" />
	</path>

	<!-- include special JPF tasks -->
	<typedef resource="org/java/plugin/tools/ant/jpf-tasks.properties">
		<classpath refid="classpath" />
	</typedef>

	<target name="help">
		<echo>
			<![CDATA[
${app.name} build file:
clean - cleans up the project build folder
build - builds entire project
run   - runs application
check - checks plug-ins integrity
docs  - generates plug-ins documentation
dist  - creates binary and source distribution packages
test  - runs some tests
]]>
		</echo>
	</target>

	<target name="clean" description="Cleans up the project build folder">
		<tstamp>
			<format property="dt-stamp" pattern="yyyy-MM-dd-HH-mm" />
			<format property="d-stamp" pattern="yyyy-MM-dd" />
		</tstamp>
		<delete dir="${build.home}" quiet="true" />
	</target>

	<target name="-init">
		<mkdir dir="${build.home}" />
	</target>

	<target name="-build-plugins">
		<mkdir dir="${build.home}/plugins" />
		<ant dir="plugins/de.ims.icarus.plugins.core" target="${target}" />
		<ant dir="plugins/de.ims.icarus.plugins.language_tools" target="${target}" />
		<ant dir="plugins/de.ims.icarus.plugins.jgraph" target="${target}" />
		<ant dir="plugins/de.ims.icarus.plugins.search_tools" target="${target}" />
		<ant dir="plugins/de.ims.icarus.plugins.dependency" target="${target}" />
		<ant dir="plugins/de.ims.icarus.plugins.matetools" target="${target}" />
		<ant dir="plugins/de.ims.icarus.plugins.tcf" target="${target}" />
		<ant dir="plugins/de.ims.icarus.plugins.weblicht" target="${target}" />
		<ant dir="plugins/de.ims.icarus.plugins.coref" target="${target}" />
		<ant dir="plugins/de.ims.icarus.plugins.errormining" target="${target}" />
		<!-- TODO insert calls to sub build-files here -->
	</target>

	<target name="-compile">
		<delete includeEmptyDirs="true">
			<fileset dir="${dest.dir}" includes="**/*" />
		</delete>
		
		<javac srcdir="${src.dir}" destdir="${dest.dir}" executable="javac"
			optimize="false" debug="on" classpathref="${classpathref}"/>

	</target>

	<target name="build" depends="clean,-init" description="Builds entire project">

		<ant dir="launcher/de.ims.icarus" target="build" />
		<ant dir="core/de.ims.icarus" target="build" />		
		
		<antcall target="-build-plugins">
			<param name="target" value="build" />
		</antcall>
		
		<!-- TODO  -->
	</target>

	<target name="run" depends="build" description="Runs application">
		<java jar="${build.home}/lib/jpf-boot.jar"
		      dir="${build.home}"
		      fork="true" />
	</target>

	<target name="check"
	        depends="build"
	        description="Checks plug-ins integrity">
		<jpf-check basedir="${basedir}/plugins"
		           includes="*/plugin.xml,*/plugin-fragment.xml"
		           verbose="true"
		           usepathresolver="true" />
	</target>

	<target name="docs"
	        depends="build"
	        description="Generates plug-ins documentation">
		<delete dir="${build.home}/docs" />
		<mkdir dir="${build.home}/docs" />
		<antcall target="-build-plugins">
			<param name="target" value="docs" />
		</antcall>
		<jpf-doc basedir="${build.home}/plugins"
		         includes="*/plugin.xml,*/plugin-fragment.xml"
		         destdir="${build.home}/docs" />
	</target>

	<target name="dist"
	        depends="clean,build,docs"
	        description="Prepares distribution packages">
		<jpf-zip basedir="${build.home}/plugins"
		         includes="*/plugin.xml,*/plugin-fragment.xml"
		         destdir="${build.home}/plugins" />
		<delete includeemptydirs="true">
			<fileset dir="${build.home}/plugins">
				<include name="**/*" />
				<exclude name="*.zip" />
			</fileset>
		</delete>
		<zip destfile="${build.home}/${app.name}-bin-${app.version}.zip"
		     duplicate="fail"
		     update="false">
			<fileset dir="${build.home}" includes="**/*" />
		</zip>
		<zip destfile="${build.home}/${app.name}-src-${app.version}.zip"
		     duplicate="fail"
		     update="false">
			<fileset dir="${basedir}"
			         excludes="build,**/classes/**,.check*,.fb*,nbproject/private/**,build/**,logs/**,data/**,temp/**,*.zip,todo.txt,plugins/org.jpf.demo.toolbox.ftpmonitor/**" />
		</zip>
		<delete includeemptydirs="true">
			<fileset dir="${build.home}">
				<include name="**/*" />
				<exclude name="${app.name}-???-${app.version}.zip" />
			</fileset>
		</delete>
	</target>

	<target name="test" depends="build" description="Some tests">
		<jpf-pack basedir="${build.home}/plugins"
		          includes="*/plugin.xml,*/plugin-fragment.xml"
		          destfile="${build.home}/all-plugins.jpa" />
		<mkdir dir="${build.home}/all-plugins-extracted" />
		<jpf-unpack srcfile="${build.home}/all-plugins.jpa"
		            destdir="${build.home}/all-plugins-extracted" />
	</target>
</project>
